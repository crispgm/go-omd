#!/usr/bin/env ruby

$LOAD_PATH.unshift(File.join(File.dirname(__FILE__), *%w(.. lib)))

argv = ARGV.dup
argv_extra = []

# rubocop:disable Lint/AssignmentInCondition
if idx = argv.index("--")
  argv_extra = argv.slice(idx+1, argv.length-2)
  argv = argv.slice(0, idx)
end

require "olympia"

if argv.include?("--version")
  puts "Olympia #{Olympia::VERSION}"
  exit 0
end

begin

  require "sinatra"

  set :public_folder, settings.root + '/../public'
  set :views, settings.root + '/../templates'
  set :bind, '0.0.0.0'
  set :port, 9494

  $camera = Olympia::Camera.new

  # pages
  get '/' do
    home
  end

  get '/home' do
    home
  end

  get '/about' do
    about
  end

  get '/albums' do
    albums
  end

  get '/remote' do
    remote
  end

  get '/list' do
    list
  end

  get '/settings' do
    preference
  end

  # operations
  get '/switch_play' do
    switch_play
  end

  get '/switch_shutter' do
    switch_shutter
  end

  def home
    # fetch info
    cam_info = $camera.get_caminfo
    connect_mode = '-'
    activate = '-'
    unused_capacity = '-'
    dcf_filenum = '-'
    props = {:Aperture => 'N/A', :ShutterSpeed => 'N/A', :ISO => 'N/A', :CameraMode => 'N/A'}

    # exceptions
    if cam_info.eql? "Olympia: NET ERROR"
      cam_info = '&lt;Device Not Connected&gt; <a href="">How to connect?</a>'
    else
      connect_mode = $camera.get_connectmode
      activate = $camera.get_activate
      unused_capacity = $camera.get_unusedcapacity
      dcf_filenum = $camera.get_dcffilenum
      props = { :Aperture => '1.2', :ShutterSpeed => '1/2000', :ISO => '200', :CameraMode => 'AperturePrior' }
    end

    # render
    erb :index, :locals => {
      :title => 'Home',
      :cam_info => cam_info,
      :connect_mode => connect_mode,
      :activate => activate,
      :unused_capacity => unused_capacity,
      :dcf_filenum => dcf_filenum,
      :props => props
    }
  end

  def about
    erb :about, :locals => {:title => 'About', :version => Olympia::VERSION}
  end

  def albums
    imgs = $camera.get_imglist

    erb :albums, :locals => {:title => 'Albums', :albums => imgs}
  end

  def remote
    erb :remote, :locals => {:title => 'Remote Control'}
  end

  def preference
    erb :settings, :locals => {:title => 'Settings'}
  end

  def list
    $camera.get_imglist
  end

  def switch_play
    $camera.switch_cammode('play')
  end

  def switch_shutter
    $camera.switch_cammode('shutter')
  end
end
